.row-fluid
  .col-md-12
    .row-fluid
      .col-md-6
        h3(mathjax) $ f(x) =A \cdot e^{\frac{(x - \mu)^2}{2c^2}} + C $
        div(hljs).
          function gaussian(x, params) {
            C = params[0];
            A = params[1];
            mu = params[2];
            sig = params[3];
            return C + A*Math.exp(-(Math.pow(x - mu, 2))/(2 * Math.pow(sig, 2)));
          }
      .col-md-6
        h1(mathjax) Gaussian function

        h4().
           Sometimes we need to fix a parameter when fitting. Without modifying the underlying data model, we can hold parameters fixed during the fit. 
           In this example, the baseline (C) of the gaussian function is held fixed to its inital value. The other parameters are however free to vary. 
           This is done by passing a parInfo Array into the fitter, such as this: 

        div(hljs).
          parInfo = [{'name': 'C', 'fixed':true}, 
                     {'name': 'A', 'fixed':false}, 
                     {'name': 'mu', 'fixed':false}, 
                     {'name': 'sigma', 'fixed':false}];
  .col-md-12
    .row-fluid
      h4 Initial Parameters
    .row-fluid
      form.form-inline(name="chart1Params")
        .form-group(ng-repeat = "par in p0")
          label {{parInfo[$index].name}}
          input.form-control(type="number", ng-model="par.value", step="any", ng-blur="fit()")
        button.btn.btn-info(ng-click="fit()") Fit
    .row-fluid
      h4 Final Best Fit Parameters
    .row-fluid
      form.form-inline(name="chart1FinalParams")
        .form-group(ng-repeat = "par in fitobj.params")
          label {{parInfo[$index].name}}
          input.form-control(type="number", disabled, ng-model="fitobj.params[$index]")
    .row-fluid
      h4 Parameter Errors
    .row-fluid
      form.form-inline(name="chart1FinalParams")
        .form-group(ng-repeat = "par in fitobj.parameterErrors")
          label {{parInfo[$index].name}}
          input.form-control(type="number", disabled, ng-model="fitobj.parameterErrors[$index]")

      ul.list-inline
        li
          h4 Elasped time 
          span {{fitobj.time}} ms
        li
          h4 Iterations
          span {{fitobj.iterations}}
        li
          h4(mathjax) $\chi^2_{red}$
          span {{fitobj.chi2red}}
        li 
          h4 Number of points
          span {{fitobj.xvals.length}} 
      div.chart(id="chart2")
        svg
      table.table
        thead
          tr
            th xval
            th yval
            th weight
        tr(ng-repeat = "d in xvals")
          td {{xvals[$index]}}
          td {{yvals[$index]}}
          td {{weights[$index]}}